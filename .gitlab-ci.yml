# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Go.gitlab-ci.yml

image: golang:latest

variables:
  # Please edit to your GitLab project
  REPO_NAME: pc-ziegert.de/media_service

# The problem is that to be able to use go get, one needs to put
# the repository in the $GOPATH. So for example if your gitlab domain
# is gitlab.com, and that your repository is namespace/project, and
# the default GOPATH being /go, then you'd need to have your
# repository in /go/src/gitlab.com/namespace/project
# Thus, making a symbolic link corrects this.
before_script:
  - mkdir -p $GOPATH/src/$(dirname $REPO_NAME)
  - ln -svf $CI_PROJECT_DIR $GOPATH/src/$REPO_NAME
  - cd $GOPATH/src/$REPO_NAME

stages:
  - test
  - build
  - deploy

format:
  stage: test
  script:
    - go fmt $(go list ./... | grep -v /vendor/)
    #- go vet $(go list ./... | grep -v /vendor/)
    #- go test -race $(go list ./... | grep -v /vendor/)

compile:
  stage: build
  needs:
    - format
  script:
    - go build -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/media_service $CI_PROJECT_DIR/media_service.go
    - go build -race -ldflags "-extldflags '-static'" -o $CI_PROJECT_DIR/media_worker $CI_PROJECT_DIR/worker.go
  artifacts:
    paths:
      - media_service
      - media_worker

deploy:
  stage: deploy
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  needs:
    - compile
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - export TAG=$(cat ${CI_PROJECT_DIR}/VERSION)
    - >-
      /kaniko/executor
      --force
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile.service"
      --destination "${CI_REGISTRY_IMAGE}/service:${TAG}"
    - >-
      /kaniko/executor
      --force
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile.worker"
      --destination "${CI_REGISTRY_IMAGE}/worker:${TAG}"
  dependencies:
    - compile


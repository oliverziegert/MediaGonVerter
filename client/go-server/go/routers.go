/*
 * DRACOON API
 *
 * REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>
 *
 * API version: 4.33.5
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/api/",
		Index,
	},

	Route{
		"CompleteOpenIdLogin",
		strings.ToUpper("Post"),
		"/api/v4/auth/openid/login",
		CompleteOpenIdLogin,
	},

	Route{
		"InitiateOpenIdLogin",
		strings.ToUpper("Get"),
		"/api/v4/auth/openid/login",
		InitiateOpenIdLogin,
	},

	Route{
		"Login",
		strings.ToUpper("Post"),
		"/api/v4/auth/login",
		Login,
	},

	Route{
		"Ping",
		strings.ToUpper("Get"),
		"/api/v4/auth/ping",
		Ping,
	},

	Route{
		"RecoverUserName",
		strings.ToUpper("Post"),
		"/api/v4/auth/recover_username",
		RecoverUserName,
	},

	Route{
		"RequestPasswordReset",
		strings.ToUpper("Post"),
		"/api/v4/auth/reset_password",
		RequestPasswordReset,
	},

	Route{
		"ResetPassword",
		strings.ToUpper("Put"),
		"/api/v4/auth/reset_password/{token}",
		ResetPassword,
	},

	Route{
		"ValidateResetPasswordToken",
		strings.ToUpper("Get"),
		"/api/v4/auth/reset_password/{token}",
		ValidateResetPasswordToken,
	},

	Route{
		"RequestAlgorithms",
		strings.ToUpper("Get"),
		"/api/v4/config/info/policies/algorithms",
		RequestAlgorithms,
	},

	Route{
		"RequestClassificationPoliciesConfigInfo",
		strings.ToUpper("Get"),
		"/api/v4/config/info/policies/classifications",
		RequestClassificationPoliciesConfigInfo,
	},

	Route{
		"RequestGeneralSettingsInfo",
		strings.ToUpper("Get"),
		"/api/v4/config/info/general",
		RequestGeneralSettingsInfo,
	},

	Route{
		"RequestInfrastructurePropertiesInfo",
		strings.ToUpper("Get"),
		"/api/v4/config/info/infrastructure",
		RequestInfrastructurePropertiesInfo,
	},

	Route{
		"RequestNotificationChannelsInfo",
		strings.ToUpper("Get"),
		"/api/v4/config/info/notifications/channels",
		RequestNotificationChannelsInfo,
	},

	Route{
		"RequestPasswordPoliciesConfigInfo",
		strings.ToUpper("Get"),
		"/api/v4/config/info/policies/passwords",
		RequestPasswordPoliciesConfigInfo,
	},

	Route{
		"RequestS3TagsInfo",
		strings.ToUpper("Get"),
		"/api/v4/config/info/s3_tags",
		RequestS3TagsInfo,
	},

	Route{
		"RequestSystemDefaultsInfo",
		strings.ToUpper("Get"),
		"/api/v4/config/info/defaults",
		RequestSystemDefaultsInfo,
	},

	Route{
		"RequestSystemSettings",
		strings.ToUpper("Get"),
		"/api/v4/config/settings",
		RequestSystemSettings,
	},

	Route{
		"UpdateSystemSettings",
		strings.ToUpper("Put"),
		"/api/v4/config/settings",
		UpdateSystemSettings,
	},

	Route{
		"DownloadAvatar",
		strings.ToUpper("Get"),
		"/api/v4/downloads/avatar/{user_id}/{uuid}",
		DownloadAvatar,
	},

	Route{
		"DownloadFileViaToken",
		strings.ToUpper("Head"),
		"/api/v4/downloads/{token}",
		DownloadFileViaToken,
	},

	Route{
		"DownloadFileViaToken1",
		strings.ToUpper("Get"),
		"/api/v4/downloads/{token}",
		DownloadFileViaToken1,
	},

	Route{
		"DownloadZipArchiveViaToken",
		strings.ToUpper("Get"),
		"/api/v4/downloads/zip/{token}",
		DownloadZipArchiveViaToken,
	},

	Route{
		"RequestAuditNodeInfo",
		strings.ToUpper("Get"),
		"/api/v4/eventlog/audits/node_info",
		RequestAuditNodeInfo,
	},

	Route{
		"RequestAuditNodeUserData",
		strings.ToUpper("Get"),
		"/api/v4/eventlog/audits/nodes",
		RequestAuditNodeUserData,
	},

	Route{
		"RequestLogEventsAsJson",
		strings.ToUpper("Get"),
		"/api/v4/eventlog/events",
		RequestLogEventsAsJson,
	},

	Route{
		"RequestLogOperations",
		strings.ToUpper("Get"),
		"/api/v4/eventlog/operations",
		RequestLogOperations,
	},

	Route{
		"AddGroupMembers",
		strings.ToUpper("Post"),
		"/api/v4/groups/{group_id}/users",
		AddGroupMembers,
	},

	Route{
		"CreateGroup",
		strings.ToUpper("Post"),
		"/api/v4/groups",
		CreateGroup,
	},

	Route{
		"RemoveGroup",
		strings.ToUpper("Delete"),
		"/api/v4/groups/{group_id}",
		RemoveGroup,
	},

	Route{
		"RemoveGroupMembers",
		strings.ToUpper("Delete"),
		"/api/v4/groups/{group_id}/users",
		RemoveGroupMembers,
	},

	Route{
		"RequestGroup",
		strings.ToUpper("Get"),
		"/api/v4/groups/{group_id}",
		RequestGroup,
	},

	Route{
		"RequestGroupMembers",
		strings.ToUpper("Get"),
		"/api/v4/groups/{group_id}/users",
		RequestGroupMembers,
	},

	Route{
		"RequestGroupRoles",
		strings.ToUpper("Get"),
		"/api/v4/groups/{group_id}/roles",
		RequestGroupRoles,
	},

	Route{
		"RequestGroupRooms",
		strings.ToUpper("Get"),
		"/api/v4/groups/{group_id}/rooms",
		RequestGroupRooms,
	},

	Route{
		"RequestGroups",
		strings.ToUpper("Get"),
		"/api/v4/groups",
		RequestGroups,
	},

	Route{
		"RequestLastAdminRoomsGroups",
		strings.ToUpper("Get"),
		"/api/v4/groups/{group_id}/last_admin_rooms",
		RequestLastAdminRoomsGroups,
	},

	Route{
		"UpdateGroup",
		strings.ToUpper("Put"),
		"/api/v4/groups/{group_id}",
		UpdateGroup,
	},

	Route{
		"AddFavorite",
		strings.ToUpper("Post"),
		"/api/v4/nodes/{node_id}/favorite",
		AddFavorite,
	},

	Route{
		"CancelFileUpload",
		strings.ToUpper("Delete"),
		"/api/v4/nodes/files/uploads/{upload_id}",
		CancelFileUpload,
	},

	Route{
		"ChangePendingAssignments",
		strings.ToUpper("Put"),
		"/api/v4/nodes/rooms/pending",
		ChangePendingAssignments,
	},

	Route{
		"CompleteFileUpload",
		strings.ToUpper("Put"),
		"/api/v4/nodes/files/uploads/{upload_id}",
		CompleteFileUpload,
	},

	Route{
		"CompleteS3FileUpload",
		strings.ToUpper("Put"),
		"/api/v4/nodes/files/uploads/{upload_id}/s3",
		CompleteS3FileUpload,
	},

	Route{
		"ConfigureRoom",
		strings.ToUpper("Put"),
		"/api/v4/nodes/rooms/{room_id}/config",
		ConfigureRoom,
	},

	Route{
		"CopyNodes",
		strings.ToUpper("Post"),
		"/api/v4/nodes/{node_id}/copy_to",
		CopyNodes,
	},

	Route{
		"CreateAndPreserveRoomRescueKeyPair",
		strings.ToUpper("Post"),
		"/api/v4/nodes/rooms/{room_id}/keypairs",
		CreateAndPreserveRoomRescueKeyPair,
	},

	Route{
		"CreateFileUploadChannel",
		strings.ToUpper("Post"),
		"/api/v4/nodes/files/uploads",
		CreateFileUploadChannel,
	},

	Route{
		"CreateFolder",
		strings.ToUpper("Post"),
		"/api/v4/nodes/folders",
		CreateFolder,
	},

	Route{
		"CreateNodeComment",
		strings.ToUpper("Post"),
		"/api/v4/nodes/{node_id}/comments",
		CreateNodeComment,
	},

	Route{
		"CreateRoom",
		strings.ToUpper("Post"),
		"/api/v4/nodes/rooms",
		CreateRoom,
	},

	Route{
		"DownloadZipArchive",
		strings.ToUpper("Post"),
		"/api/v4/nodes/zip/download",
		DownloadZipArchive,
	},

	Route{
		"EmptyDeletedNodes",
		strings.ToUpper("Delete"),
		"/api/v4/nodes/{node_id}/deleted_nodes",
		EmptyDeletedNodes,
	},

	Route{
		"EncryptRoom",
		strings.ToUpper("Put"),
		"/api/v4/nodes/rooms/{room_id}/encrypt",
		EncryptRoom,
	},

	Route{
		"GenerateDownloadUrl",
		strings.ToUpper("Post"),
		"/api/v4/nodes/files/{file_id}/downloads",
		GenerateDownloadUrl,
	},

	Route{
		"GenerateDownloadUrlForZipArchive",
		strings.ToUpper("Post"),
		"/api/v4/nodes/zip",
		GenerateDownloadUrlForZipArchive,
	},

	Route{
		"GeneratePresignedUrlsFiles",
		strings.ToUpper("Post"),
		"/api/v4/nodes/files/uploads/{upload_id}/s3_urls",
		GeneratePresignedUrlsFiles,
	},

	Route{
		"HandleRoomWebhookAssignments",
		strings.ToUpper("Put"),
		"/api/v4/nodes/rooms/{room_id}/webhooks",
		HandleRoomWebhookAssignments,
	},

	Route{
		"MoveNodes",
		strings.ToUpper("Post"),
		"/api/v4/nodes/{node_id}/move_to",
		MoveNodes,
	},

	Route{
		"RemoveDeletedNodes",
		strings.ToUpper("Delete"),
		"/api/v4/nodes/deleted_nodes",
		RemoveDeletedNodes,
	},

	Route{
		"RemoveFavorite",
		strings.ToUpper("Delete"),
		"/api/v4/nodes/{node_id}/favorite",
		RemoveFavorite,
	},

	Route{
		"RemoveNode",
		strings.ToUpper("Delete"),
		"/api/v4/nodes/{node_id}",
		RemoveNode,
	},

	Route{
		"RemoveNodeComment",
		strings.ToUpper("Delete"),
		"/api/v4/nodes/comments/{comment_id}",
		RemoveNodeComment,
	},

	Route{
		"RemoveNodes",
		strings.ToUpper("Delete"),
		"/api/v4/nodes",
		RemoveNodes,
	},

	Route{
		"RemoveRoomRescueKeyPair",
		strings.ToUpper("Delete"),
		"/api/v4/nodes/rooms/{room_id}/keypair",
		RemoveRoomRescueKeyPair,
	},

	Route{
		"RequestDeletedNode",
		strings.ToUpper("Get"),
		"/api/v4/nodes/deleted_nodes/{deleted_node_id}",
		RequestDeletedNode,
	},

	Route{
		"RequestDeletedNodeVersions",
		strings.ToUpper("Get"),
		"/api/v4/nodes/{node_id}/deleted_nodes/versions",
		RequestDeletedNodeVersions,
	},

	Route{
		"RequestDeletedNodesSummary",
		strings.ToUpper("Get"),
		"/api/v4/nodes/{node_id}/deleted_nodes",
		RequestDeletedNodesSummary,
	},

	Route{
		"RequestListOfWebhooksForRoom",
		strings.ToUpper("Get"),
		"/api/v4/nodes/rooms/{room_id}/webhooks",
		RequestListOfWebhooksForRoom,
	},

	Route{
		"RequestMissingFileKeys",
		strings.ToUpper("Get"),
		"/api/v4/nodes/missingFileKeys",
		RequestMissingFileKeys,
	},

	Route{
		"RequestNode",
		strings.ToUpper("Get"),
		"/api/v4/nodes/{node_id}",
		RequestNode,
	},

	Route{
		"RequestNodeComments",
		strings.ToUpper("Get"),
		"/api/v4/nodes/{node_id}/comments",
		RequestNodeComments,
	},

	Route{
		"RequestNodeParents",
		strings.ToUpper("Get"),
		"/api/v4/nodes/{node_id}/parents",
		RequestNodeParents,
	},

	Route{
		"RequestNodes",
		strings.ToUpper("Get"),
		"/api/v4/nodes",
		RequestNodes,
	},

	Route{
		"RequestPendingAssignments",
		strings.ToUpper("Get"),
		"/api/v4/nodes/rooms/pending",
		RequestPendingAssignments,
	},

	Route{
		"RequestRoomActivitiesLogAsJson",
		strings.ToUpper("Get"),
		"/api/v4/nodes/rooms/{room_id}/events",
		RequestRoomActivitiesLogAsJson,
	},

	Route{
		"RequestRoomGroups",
		strings.ToUpper("Get"),
		"/api/v4/nodes/rooms/{room_id}/groups",
		RequestRoomGroups,
	},

	Route{
		"RequestRoomPolicies",
		strings.ToUpper("Get"),
		"/api/v4/nodes/rooms/{room_id}/policies",
		RequestRoomPolicies,
	},

	Route{
		"RequestRoomRescueKey",
		strings.ToUpper("Get"),
		"/api/v4/nodes/files/{file_id}/data_room_file_key",
		RequestRoomRescueKey,
	},

	Route{
		"RequestRoomRescueKeyPair",
		strings.ToUpper("Get"),
		"/api/v4/nodes/rooms/{room_id}/keypair",
		RequestRoomRescueKeyPair,
	},

	Route{
		"RequestRoomRescueKeyPairs",
		strings.ToUpper("Get"),
		"/api/v4/nodes/rooms/{room_id}/keypairs",
		RequestRoomRescueKeyPairs,
	},

	Route{
		"RequestRoomS3Tags",
		strings.ToUpper("Get"),
		"/api/v4/nodes/rooms/{room_id}/s3_tags",
		RequestRoomS3Tags,
	},

	Route{
		"RequestRoomUsers",
		strings.ToUpper("Get"),
		"/api/v4/nodes/rooms/{room_id}/users",
		RequestRoomUsers,
	},

	Route{
		"RequestSystemRescueKey",
		strings.ToUpper("Get"),
		"/api/v4/nodes/files/{file_id}/data_space_file_key",
		RequestSystemRescueKey,
	},

	Route{
		"RequestUploadStatusFiles",
		strings.ToUpper("Get"),
		"/api/v4/nodes/files/uploads/{upload_id}",
		RequestUploadStatusFiles,
	},

	Route{
		"RequestUserFileKey",
		strings.ToUpper("Get"),
		"/api/v4/nodes/files/{file_id}/user_file_key",
		RequestUserFileKey,
	},

	Route{
		"RestoreNodes",
		strings.ToUpper("Post"),
		"/api/v4/nodes/deleted_nodes/actions/restore",
		RestoreNodes,
	},

	Route{
		"RevokeRoomGroups",
		strings.ToUpper("Delete"),
		"/api/v4/nodes/rooms/{room_id}/groups",
		RevokeRoomGroups,
	},

	Route{
		"RevokeRoomUsers",
		strings.ToUpper("Delete"),
		"/api/v4/nodes/rooms/{room_id}/users",
		RevokeRoomUsers,
	},

	Route{
		"SearchNodes",
		strings.ToUpper("Get"),
		"/api/v4/nodes/search",
		SearchNodes,
	},

	Route{
		"SetRoomPolicies",
		strings.ToUpper("Put"),
		"/api/v4/nodes/rooms/{room_id}/policies",
		SetRoomPolicies,
	},

	Route{
		"SetRoomRescueKeyPair",
		strings.ToUpper("Post"),
		"/api/v4/nodes/rooms/{room_id}/keypair",
		SetRoomRescueKeyPair,
	},

	Route{
		"SetRoomS3Tags",
		strings.ToUpper("Post"),
		"/api/v4/nodes/rooms/{room_id}/s3_tags",
		SetRoomS3Tags,
	},

	Route{
		"SetUserFileKeys",
		strings.ToUpper("Post"),
		"/api/v4/nodes/files/keys",
		SetUserFileKeys,
	},

	Route{
		"UpdateFavorites",
		strings.ToUpper("Put"),
		"/api/v4/nodes/favorites",
		UpdateFavorites,
	},

	Route{
		"UpdateFile",
		strings.ToUpper("Put"),
		"/api/v4/nodes/files/{file_id}",
		UpdateFile,
	},

	Route{
		"UpdateFiles",
		strings.ToUpper("Put"),
		"/api/v4/nodes/files",
		UpdateFiles,
	},

	Route{
		"UpdateFolder",
		strings.ToUpper("Put"),
		"/api/v4/nodes/folders/{folder_id}",
		UpdateFolder,
	},

	Route{
		"UpdateNodeComment",
		strings.ToUpper("Put"),
		"/api/v4/nodes/comments/{comment_id}",
		UpdateNodeComment,
	},

	Route{
		"UpdateRoom",
		strings.ToUpper("Put"),
		"/api/v4/nodes/rooms/{room_id}",
		UpdateRoom,
	},

	Route{
		"UpdateRoomGroups",
		strings.ToUpper("Put"),
		"/api/v4/nodes/rooms/{room_id}/groups",
		UpdateRoomGroups,
	},

	Route{
		"UpdateRoomUsers",
		strings.ToUpper("Put"),
		"/api/v4/nodes/rooms/{room_id}/users",
		UpdateRoomUsers,
	},

	Route{
		"UploadFileAsMultipart",
		strings.ToUpper("Post"),
		"/api/v4/nodes/files/uploads/{upload_id}",
		UploadFileAsMultipart,
	},

	Route{
		"CreateCustomer",
		strings.ToUpper("Post"),
		"/api/v4/provisioning/customers",
		CreateCustomer,
	},

	Route{
		"CreateTenantWebhook",
		strings.ToUpper("Post"),
		"/api/v4/provisioning/webhooks",
		CreateTenantWebhook,
	},

	Route{
		"RemoveCustomer",
		strings.ToUpper("Delete"),
		"/api/v4/provisioning/customers/{customer_id}",
		RemoveCustomer,
	},

	Route{
		"RemoveCustomerAttribute",
		strings.ToUpper("Delete"),
		"/api/v4/provisioning/customers/{customer_id}/customerAttributes/{key}",
		RemoveCustomerAttribute,
	},

	Route{
		"RemoveTenantWebhook",
		strings.ToUpper("Delete"),
		"/api/v4/provisioning/webhooks/{webhook_id}",
		RemoveTenantWebhook,
	},

	Route{
		"RequestCustomer",
		strings.ToUpper("Get"),
		"/api/v4/provisioning/customers/{customer_id}",
		RequestCustomer,
	},

	Route{
		"RequestCustomerAttributes",
		strings.ToUpper("Get"),
		"/api/v4/provisioning/customers/{customer_id}/customerAttributes",
		RequestCustomerAttributes,
	},

	Route{
		"RequestCustomerUsers",
		strings.ToUpper("Get"),
		"/api/v4/provisioning/customers/{customer_id}/users",
		RequestCustomerUsers,
	},

	Route{
		"RequestCustomers",
		strings.ToUpper("Get"),
		"/api/v4/provisioning/customers",
		RequestCustomers,
	},

	Route{
		"RequestListOfEventTypesForTenant",
		strings.ToUpper("Get"),
		"/api/v4/provisioning/webhooks/event_types",
		RequestListOfEventTypesForTenant,
	},

	Route{
		"RequestListOfTenantWebhooks",
		strings.ToUpper("Get"),
		"/api/v4/provisioning/webhooks",
		RequestListOfTenantWebhooks,
	},

	Route{
		"RequestTenantWebhook",
		strings.ToUpper("Get"),
		"/api/v4/provisioning/webhooks/{webhook_id}",
		RequestTenantWebhook,
	},

	Route{
		"ResetTenantWebhookLifetime",
		strings.ToUpper("Post"),
		"/api/v4/provisioning/webhooks/{webhook_id}/reset_lifetime",
		ResetTenantWebhookLifetime,
	},

	Route{
		"SetCustomerAttributes",
		strings.ToUpper("Post"),
		"/api/v4/provisioning/customers/{customer_id}/customerAttributes",
		SetCustomerAttributes,
	},

	Route{
		"UpdateCustomer",
		strings.ToUpper("Put"),
		"/api/v4/provisioning/customers/{customer_id}",
		UpdateCustomer,
	},

	Route{
		"UpdateCustomerAttributes",
		strings.ToUpper("Put"),
		"/api/v4/provisioning/customers/{customer_id}/customerAttributes",
		UpdateCustomerAttributes,
	},

	Route{
		"UpdateTenantWebhook",
		strings.ToUpper("Put"),
		"/api/v4/provisioning/webhooks/{webhook_id}",
		UpdateTenantWebhook,
	},

	Route{
		"CancelFileUploadViaShare",
		strings.ToUpper("Delete"),
		"/api/v4/public/shares/uploads/{access_key}/{upload_id}",
		CancelFileUploadViaShare,
	},

	Route{
		"CompleteFileUploadViaShare",
		strings.ToUpper("Put"),
		"/api/v4/public/shares/uploads/{access_key}/{upload_id}",
		CompleteFileUploadViaShare,
	},

	Route{
		"CompleteS3FileUploadViaShare",
		strings.ToUpper("Put"),
		"/api/v4/public/shares/uploads/{access_key}/{upload_id}/s3",
		CompleteS3FileUploadViaShare,
	},

	Route{
		"CreateShareUploadChannel",
		strings.ToUpper("Post"),
		"/api/v4/public/shares/uploads/{access_key}",
		CreateShareUploadChannel,
	},

	Route{
		"DownloadFileViaTokenPublic",
		strings.ToUpper("Head"),
		"/api/v4/public/shares/downloads/{access_key}/{token}",
		DownloadFileViaTokenPublic,
	},

	Route{
		"DownloadFileViaTokenPublic1",
		strings.ToUpper("Get"),
		"/api/v4/public/shares/downloads/{access_key}/{token}",
		DownloadFileViaTokenPublic1,
	},

	Route{
		"GenerateDownloadUrlPublic",
		strings.ToUpper("Post"),
		"/api/v4/public/shares/downloads/{access_key}",
		GenerateDownloadUrlPublic,
	},

	Route{
		"GeneratePresignedUrlsPublic",
		strings.ToUpper("Post"),
		"/api/v4/public/shares/uploads/{access_key}/{upload_id}/s3_urls",
		GeneratePresignedUrlsPublic,
	},

	Route{
		"RequestActiveDirectoryAuthInfo",
		strings.ToUpper("Get"),
		"/api/v4/public/system/info/auth/ad",
		RequestActiveDirectoryAuthInfo,
	},

	Route{
		"RequestOpenIdAuthInfo",
		strings.ToUpper("Get"),
		"/api/v4/public/system/info/auth/openid",
		RequestOpenIdAuthInfo,
	},

	Route{
		"RequestPublicDownloadShareInfo",
		strings.ToUpper("Get"),
		"/api/v4/public/shares/downloads/{access_key}",
		RequestPublicDownloadShareInfo,
	},

	Route{
		"RequestPublicUploadShareInfo",
		strings.ToUpper("Get"),
		"/api/v4/public/shares/uploads/{access_key}",
		RequestPublicUploadShareInfo,
	},

	Route{
		"RequestSoftwareVersion",
		strings.ToUpper("Get"),
		"/api/v4/public/software/version",
		RequestSoftwareVersion,
	},

	Route{
		"RequestSystemInfo",
		strings.ToUpper("Get"),
		"/api/v4/public/system/info",
		RequestSystemInfo,
	},

	Route{
		"RequestSystemTime",
		strings.ToUpper("Get"),
		"/api/v4/public/time",
		RequestSystemTime,
	},

	Route{
		"RequestThirdPartyDependencies",
		strings.ToUpper("Get"),
		"/api/v4/public/software/third_party_dependencies",
		RequestThirdPartyDependencies,
	},

	Route{
		"RequestUploadStatusPublic",
		strings.ToUpper("Get"),
		"/api/v4/public/shares/uploads/{access_key}/{upload_id}",
		RequestUploadStatusPublic,
	},

	Route{
		"UploadFileAsMultipartPublic1",
		strings.ToUpper("Post"),
		"/api/v4/public/shares/uploads/{access_key}/{upload_id}",
		UploadFileAsMultipartPublic1,
	},

	Route{
		"RequestSubscriptionScopes",
		strings.ToUpper("Get"),
		"/api/v4/resources/user/notifications/scopes",
		RequestSubscriptionScopes,
	},

	Route{
		"RequestUserAvatar",
		strings.ToUpper("Get"),
		"/api/v4/resources/users/{user_id}/avatar/{uuid}",
		RequestUserAvatar,
	},

	Route{
		"AddRoleGroups",
		strings.ToUpper("Post"),
		"/api/v4/roles/{role_id}/groups",
		AddRoleGroups,
	},

	Route{
		"AddRoleUsers",
		strings.ToUpper("Post"),
		"/api/v4/roles/{role_id}/users",
		AddRoleUsers,
	},

	Route{
		"RequestRoleGroups",
		strings.ToUpper("Get"),
		"/api/v4/roles/{role_id}/groups",
		RequestRoleGroups,
	},

	Route{
		"RequestRoleUsers",
		strings.ToUpper("Get"),
		"/api/v4/roles/{role_id}/users",
		RequestRoleUsers,
	},

	Route{
		"RequestRoles",
		strings.ToUpper("Get"),
		"/api/v4/roles",
		RequestRoles,
	},

	Route{
		"RevokeRoleGroups",
		strings.ToUpper("Delete"),
		"/api/v4/roles/{role_id}/groups",
		RevokeRoleGroups,
	},

	Route{
		"RevokeRoleUsers",
		strings.ToUpper("Delete"),
		"/api/v4/roles/{role_id}/users",
		RevokeRoleUsers,
	},

	Route{
		"CreateAndPreserveKeyPair",
		strings.ToUpper("Post"),
		"/api/v4/settings/keypairs",
		CreateAndPreserveKeyPair,
	},

	Route{
		"CreateWebhook",
		strings.ToUpper("Post"),
		"/api/v4/settings/webhooks",
		CreateWebhook,
	},

	Route{
		"RemoveSystemRescueKeyPair",
		strings.ToUpper("Delete"),
		"/api/v4/settings/keypair",
		RemoveSystemRescueKeyPair,
	},

	Route{
		"RemoveWebhook",
		strings.ToUpper("Delete"),
		"/api/v4/settings/webhooks/{webhook_id}",
		RemoveWebhook,
	},

	Route{
		"RequestAllSystemRescueKeyPairs",
		strings.ToUpper("Get"),
		"/api/v4/settings/keypairs",
		RequestAllSystemRescueKeyPairs,
	},

	Route{
		"RequestListOfEventTypesForConfigManager",
		strings.ToUpper("Get"),
		"/api/v4/settings/webhooks/event_types",
		RequestListOfEventTypesForConfigManager,
	},

	Route{
		"RequestListOfWebhooks",
		strings.ToUpper("Get"),
		"/api/v4/settings/webhooks",
		RequestListOfWebhooks,
	},

	Route{
		"RequestNotificationChannels",
		strings.ToUpper("Get"),
		"/api/v4/settings/notifications/channels",
		RequestNotificationChannels,
	},

	Route{
		"RequestSettings",
		strings.ToUpper("Get"),
		"/api/v4/settings",
		RequestSettings,
	},

	Route{
		"RequestSystemRescueKeyPair",
		strings.ToUpper("Get"),
		"/api/v4/settings/keypair",
		RequestSystemRescueKeyPair,
	},

	Route{
		"RequestWebhook",
		strings.ToUpper("Get"),
		"/api/v4/settings/webhooks/{webhook_id}",
		RequestWebhook,
	},

	Route{
		"ResetWebhookLifetime",
		strings.ToUpper("Post"),
		"/api/v4/settings/webhooks/{webhook_id}/reset_lifetime",
		ResetWebhookLifetime,
	},

	Route{
		"SetSettings",
		strings.ToUpper("Put"),
		"/api/v4/settings",
		SetSettings,
	},

	Route{
		"SetSystemRescueKeyPair",
		strings.ToUpper("Post"),
		"/api/v4/settings/keypair",
		SetSystemRescueKeyPair,
	},

	Route{
		"ToggleNotificationChannels",
		strings.ToUpper("Put"),
		"/api/v4/settings/notifications/channels",
		ToggleNotificationChannels,
	},

	Route{
		"UpdateWebhook",
		strings.ToUpper("Put"),
		"/api/v4/settings/webhooks/{webhook_id}",
		UpdateWebhook,
	},

	Route{
		"CreateDownloadShare",
		strings.ToUpper("Post"),
		"/api/v4/shares/downloads",
		CreateDownloadShare,
	},

	Route{
		"CreateUploadShare",
		strings.ToUpper("Post"),
		"/api/v4/shares/uploads",
		CreateUploadShare,
	},

	Route{
		"DeleteDownloadShares",
		strings.ToUpper("Delete"),
		"/api/v4/shares/downloads",
		DeleteDownloadShares,
	},

	Route{
		"DeleteUploadShares",
		strings.ToUpper("Delete"),
		"/api/v4/shares/uploads",
		DeleteUploadShares,
	},

	Route{
		"RemoveDownloadShare",
		strings.ToUpper("Delete"),
		"/api/v4/shares/downloads/{share_id}",
		RemoveDownloadShare,
	},

	Route{
		"RemoveUploadShare",
		strings.ToUpper("Delete"),
		"/api/v4/shares/uploads/{share_id}",
		RemoveUploadShare,
	},

	Route{
		"RequestDownloadShare",
		strings.ToUpper("Get"),
		"/api/v4/shares/downloads/{share_id}",
		RequestDownloadShare,
	},

	Route{
		"RequestDownloadShareQr",
		strings.ToUpper("Get"),
		"/api/v4/shares/downloads/{share_id}/qr",
		RequestDownloadShareQr,
	},

	Route{
		"RequestDownloadShares",
		strings.ToUpper("Get"),
		"/api/v4/shares/downloads",
		RequestDownloadShares,
	},

	Route{
		"RequestUploadShare",
		strings.ToUpper("Get"),
		"/api/v4/shares/uploads/{share_id}",
		RequestUploadShare,
	},

	Route{
		"RequestUploadShareQr",
		strings.ToUpper("Get"),
		"/api/v4/shares/uploads/{share_id}/qr",
		RequestUploadShareQr,
	},

	Route{
		"RequestUploadShares",
		strings.ToUpper("Get"),
		"/api/v4/shares/uploads",
		RequestUploadShares,
	},

	Route{
		"SendDownloadShareLinkViaEmail",
		strings.ToUpper("Post"),
		"/api/v4/shares/downloads/{share_id}/email",
		SendDownloadShareLinkViaEmail,
	},

	Route{
		"SendUploadShareLinkViaEmail",
		strings.ToUpper("Post"),
		"/api/v4/shares/uploads/{share_id}/email",
		SendUploadShareLinkViaEmail,
	},

	Route{
		"UpdateDownloadShare",
		strings.ToUpper("Put"),
		"/api/v4/shares/downloads/{share_id}",
		UpdateDownloadShare,
	},

	Route{
		"UpdateDownloadShares",
		strings.ToUpper("Put"),
		"/api/v4/shares/downloads",
		UpdateDownloadShares,
	},

	Route{
		"UpdateUploadShare",
		strings.ToUpper("Put"),
		"/api/v4/shares/uploads/{share_id}",
		UpdateUploadShare,
	},

	Route{
		"UpdateUploadShares",
		strings.ToUpper("Put"),
		"/api/v4/shares/uploads",
		UpdateUploadShares,
	},

	Route{
		"CreateAdConfig",
		strings.ToUpper("Post"),
		"/api/v4/system/config/auth/ads",
		CreateAdConfig,
	},

	Route{
		"CreateOAuthClient",
		strings.ToUpper("Post"),
		"/api/v4/system/config/oauth/clients",
		CreateOAuthClient,
	},

	Route{
		"CreateOpenIdIdpConfig",
		strings.ToUpper("Post"),
		"/api/v4/system/config/auth/openid/idps",
		CreateOpenIdIdpConfig,
	},

	Route{
		"CreateRadiusConfig",
		strings.ToUpper("Post"),
		"/api/v4/system/config/auth/radius",
		CreateRadiusConfig,
	},

	Route{
		"RemoveAdConfig",
		strings.ToUpper("Delete"),
		"/api/v4/system/config/auth/ads/{ad_id}",
		RemoveAdConfig,
	},

	Route{
		"RemoveOAuthClient",
		strings.ToUpper("Delete"),
		"/api/v4/system/config/oauth/clients/{client_id}",
		RemoveOAuthClient,
	},

	Route{
		"RemoveOpenIdIdpConfig",
		strings.ToUpper("Delete"),
		"/api/v4/system/config/auth/openid/idps/{idp_id}",
		RemoveOpenIdIdpConfig,
	},

	Route{
		"RemoveRadiusConfig",
		strings.ToUpper("Delete"),
		"/api/v4/system/config/auth/radius",
		RemoveRadiusConfig,
	},

	Route{
		"RequestAdConfig",
		strings.ToUpper("Get"),
		"/api/v4/system/config/auth/ads/{ad_id}",
		RequestAdConfig,
	},

	Route{
		"RequestAdConfigs",
		strings.ToUpper("Get"),
		"/api/v4/system/config/auth/ads",
		RequestAdConfigs,
	},

	Route{
		"RequestOAuthClient",
		strings.ToUpper("Get"),
		"/api/v4/system/config/oauth/clients/{client_id}",
		RequestOAuthClient,
	},

	Route{
		"RequestOAuthClients",
		strings.ToUpper("Get"),
		"/api/v4/system/config/oauth/clients",
		RequestOAuthClients,
	},

	Route{
		"RequestOpenIdIdpConfig",
		strings.ToUpper("Get"),
		"/api/v4/system/config/auth/openid/idps/{idp_id}",
		RequestOpenIdIdpConfig,
	},

	Route{
		"RequestOpenIdIdpConfigs",
		strings.ToUpper("Get"),
		"/api/v4/system/config/auth/openid/idps",
		RequestOpenIdIdpConfigs,
	},

	Route{
		"RequestRadiusConfig",
		strings.ToUpper("Get"),
		"/api/v4/system/config/auth/radius",
		RequestRadiusConfig,
	},

	Route{
		"TestAdConfig",
		strings.ToUpper("Post"),
		"/api/v4/system/config/actions/test/ad",
		TestAdConfig,
	},

	Route{
		"TestRadiusConfig",
		strings.ToUpper("Post"),
		"/api/v4/system/config/actions/test/radius",
		TestRadiusConfig,
	},

	Route{
		"UpdateAdConfig",
		strings.ToUpper("Put"),
		"/api/v4/system/config/auth/ads/{ad_id}",
		UpdateAdConfig,
	},

	Route{
		"UpdateOAuthClient",
		strings.ToUpper("Put"),
		"/api/v4/system/config/oauth/clients/{client_id}",
		UpdateOAuthClient,
	},

	Route{
		"UpdateOpenIdIdpConfig",
		strings.ToUpper("Put"),
		"/api/v4/system/config/auth/openid/idps/{idp_id}",
		UpdateOpenIdIdpConfig,
	},

	Route{
		"UpdateRadiusConfig",
		strings.ToUpper("Put"),
		"/api/v4/system/config/auth/radius",
		UpdateRadiusConfig,
	},

	Route{
		"ChangeClassificationPoliciesConfig",
		strings.ToUpper("Put"),
		"/api/v4/system/config/policies/classifications",
		ChangeClassificationPoliciesConfig,
	},

	Route{
		"ChangePasswordPoliciesConfig",
		strings.ToUpper("Put"),
		"/api/v4/system/config/policies/passwords",
		ChangePasswordPoliciesConfig,
	},

	Route{
		"EnforceLoginPasswordChange",
		strings.ToUpper("Post"),
		"/api/v4/system/config/policies/passwords/enforce_change",
		EnforceLoginPasswordChange,
	},

	Route{
		"RequestClassificationPoliciesConfig",
		strings.ToUpper("Get"),
		"/api/v4/system/config/policies/classifications",
		RequestClassificationPoliciesConfig,
	},

	Route{
		"RequestPasswordPoliciesConfig",
		strings.ToUpper("Get"),
		"/api/v4/system/config/policies/passwords",
		RequestPasswordPoliciesConfig,
	},

	Route{
		"RequestPasswordPoliciesForPasswordType",
		strings.ToUpper("Get"),
		"/api/v4/system/config/policies/passwords/{password_type}",
		RequestPasswordPoliciesForPasswordType,
	},

	Route{
		"RequestAuthConfig",
		strings.ToUpper("Get"),
		"/api/v4/system/config/settings/auth",
		RequestAuthConfig,
	},

	Route{
		"RequestEventlogConfig",
		strings.ToUpper("Get"),
		"/api/v4/system/config/settings/eventlog",
		RequestEventlogConfig,
	},

	Route{
		"RequestGeneralSettings",
		strings.ToUpper("Get"),
		"/api/v4/system/config/settings/general",
		RequestGeneralSettings,
	},

	Route{
		"RequestInfrastructureProperties",
		strings.ToUpper("Get"),
		"/api/v4/system/config/settings/infrastructure",
		RequestInfrastructureProperties,
	},

	Route{
		"RequestSyslogConfig",
		strings.ToUpper("Get"),
		"/api/v4/system/config/settings/syslog",
		RequestSyslogConfig,
	},

	Route{
		"RequestSystemDefaults",
		strings.ToUpper("Get"),
		"/api/v4/system/config/settings/defaults",
		RequestSystemDefaults,
	},

	Route{
		"UpdateAuthConfig",
		strings.ToUpper("Put"),
		"/api/v4/system/config/settings/auth",
		UpdateAuthConfig,
	},

	Route{
		"UpdateEventlogConfig",
		strings.ToUpper("Put"),
		"/api/v4/system/config/settings/eventlog",
		UpdateEventlogConfig,
	},

	Route{
		"UpdateGeneralSettings",
		strings.ToUpper("Put"),
		"/api/v4/system/config/settings/general",
		UpdateGeneralSettings,
	},

	Route{
		"UpdateSyslogConfig",
		strings.ToUpper("Put"),
		"/api/v4/system/config/settings/syslog",
		UpdateSyslogConfig,
	},

	Route{
		"UpdateSystemDefaults",
		strings.ToUpper("Put"),
		"/api/v4/system/config/settings/defaults",
		UpdateSystemDefaults,
	},

	Route{
		"CreateS3Config",
		strings.ToUpper("Post"),
		"/api/v4/system/config/storage/s3",
		CreateS3Config,
	},

	Route{
		"CreateS3Tag",
		strings.ToUpper("Post"),
		"/api/v4/system/config/storage/s3/tags",
		CreateS3Tag,
	},

	Route{
		"RemoveS3Tag",
		strings.ToUpper("Delete"),
		"/api/v4/system/config/storage/s3/tags/{id}",
		RemoveS3Tag,
	},

	Route{
		"Request3Config",
		strings.ToUpper("Get"),
		"/api/v4/system/config/storage/s3",
		Request3Config,
	},

	Route{
		"RequestS3Tag",
		strings.ToUpper("Get"),
		"/api/v4/system/config/storage/s3/tags/{id}",
		RequestS3Tag,
	},

	Route{
		"RequestS3TagList",
		strings.ToUpper("Get"),
		"/api/v4/system/config/storage/s3/tags",
		RequestS3TagList,
	},

	Route{
		"UpdateS3Config",
		strings.ToUpper("Put"),
		"/api/v4/system/config/storage/s3",
		UpdateS3Config,
	},

	Route{
		"CancelFileUploadByToken",
		strings.ToUpper("Delete"),
		"/api/v4/uploads/{token}",
		CancelFileUploadByToken,
	},

	Route{
		"CompleteFileUploadByToken",
		strings.ToUpper("Put"),
		"/api/v4/uploads/{token}",
		CompleteFileUploadByToken,
	},

	Route{
		"UploadFileByTokenAsMultipart1",
		strings.ToUpper("Post"),
		"/api/v4/uploads/{token}",
		UploadFileByTokenAsMultipart1,
	},

	Route{
		"ChangeUserPassword",
		strings.ToUpper("Put"),
		"/api/v4/user/account/password",
		ChangeUserPassword,
	},

	Route{
		"CreateAndPreserveUserKeyPair",
		strings.ToUpper("Post"),
		"/api/v4/user/account/keypairs",
		CreateAndPreserveUserKeyPair,
	},

	Route{
		"EnableCustomerEncryption",
		strings.ToUpper("Put"),
		"/api/v4/user/account/customer",
		EnableCustomerEncryption,
	},

	Route{
		"ListDownloadShareSubscriptions",
		strings.ToUpper("Get"),
		"/api/v4/user/subscriptions/download_shares",
		ListDownloadShareSubscriptions,
	},

	Route{
		"ListNodeSubscriptions",
		strings.ToUpper("Get"),
		"/api/v4/user/subscriptions/nodes",
		ListNodeSubscriptions,
	},

	Route{
		"ListUploadShareSubscriptions",
		strings.ToUpper("Get"),
		"/api/v4/user/subscriptions/upload_shares",
		ListUploadShareSubscriptions,
	},

	Route{
		"Logout",
		strings.ToUpper("Post"),
		"/api/v4/user/logout",
		Logout,
	},

	Route{
		"PingUser",
		strings.ToUpper("Get"),
		"/api/v4/user/ping",
		PingUser,
	},

	Route{
		"RemoveOAuthApproval",
		strings.ToUpper("Delete"),
		"/api/v4/user/oauth/approvals/{client_id}",
		RemoveOAuthApproval,
	},

	Route{
		"RemoveOAuthAuthorization",
		strings.ToUpper("Delete"),
		"/api/v4/user/oauth/authorizations/{client_id}/{authorization_id}",
		RemoveOAuthAuthorization,
	},

	Route{
		"RemoveOAuthAuthorizations",
		strings.ToUpper("Delete"),
		"/api/v4/user/oauth/authorizations/{client_id}",
		RemoveOAuthAuthorizations,
	},

	Route{
		"RemoveProfileAttribute",
		strings.ToUpper("Delete"),
		"/api/v4/user/profileAttributes/{key}",
		RemoveProfileAttribute,
	},

	Route{
		"RemoveUserKeyPair",
		strings.ToUpper("Delete"),
		"/api/v4/user/account/keypair",
		RemoveUserKeyPair,
	},

	Route{
		"RequestAvatar",
		strings.ToUpper("Get"),
		"/api/v4/user/account/avatar",
		RequestAvatar,
	},

	Route{
		"RequestCustomerInfo",
		strings.ToUpper("Get"),
		"/api/v4/user/account/customer",
		RequestCustomerInfo,
	},

	Route{
		"RequestCustomerKeyPair",
		strings.ToUpper("Get"),
		"/api/v4/user/account/customer/keypair",
		RequestCustomerKeyPair,
	},

	Route{
		"RequestListOfNotificationConfigs",
		strings.ToUpper("Get"),
		"/api/v4/user/notifications/config",
		RequestListOfNotificationConfigs,
	},

	Route{
		"RequestOAuthApprovals",
		strings.ToUpper("Get"),
		"/api/v4/user/oauth/approvals",
		RequestOAuthApprovals,
	},

	Route{
		"RequestOAuthAuthorizations",
		strings.ToUpper("Get"),
		"/api/v4/user/oauth/authorizations",
		RequestOAuthAuthorizations,
	},

	Route{
		"RequestProfileAttributes",
		strings.ToUpper("Get"),
		"/api/v4/user/profileAttributes",
		RequestProfileAttributes,
	},

	Route{
		"RequestUserInfo",
		strings.ToUpper("Get"),
		"/api/v4/user/account",
		RequestUserInfo,
	},

	Route{
		"RequestUserKeyPair",
		strings.ToUpper("Get"),
		"/api/v4/user/account/keypair",
		RequestUserKeyPair,
	},

	Route{
		"RequestUserKeyPairs",
		strings.ToUpper("Get"),
		"/api/v4/user/account/keypairs",
		RequestUserKeyPairs,
	},

	Route{
		"ResetAvatar",
		strings.ToUpper("Delete"),
		"/api/v4/user/account/avatar",
		ResetAvatar,
	},

	Route{
		"SetProfileAttributes",
		strings.ToUpper("Post"),
		"/api/v4/user/profileAttributes",
		SetProfileAttributes,
	},

	Route{
		"SetUserKeyPair",
		strings.ToUpper("Post"),
		"/api/v4/user/account/keypair",
		SetUserKeyPair,
	},

	Route{
		"SubscribeDownloadShare",
		strings.ToUpper("Post"),
		"/api/v4/user/subscriptions/download_shares/{share_id}",
		SubscribeDownloadShare,
	},

	Route{
		"SubscribeDownloadShares",
		strings.ToUpper("Put"),
		"/api/v4/user/subscriptions/download_shares",
		SubscribeDownloadShares,
	},

	Route{
		"SubscribeNode",
		strings.ToUpper("Post"),
		"/api/v4/user/subscriptions/nodes/{node_id}",
		SubscribeNode,
	},

	Route{
		"SubscribeUploadShare",
		strings.ToUpper("Post"),
		"/api/v4/user/subscriptions/upload_shares/{share_id}",
		SubscribeUploadShare,
	},

	Route{
		"SubscribeUploadShares",
		strings.ToUpper("Put"),
		"/api/v4/user/subscriptions/upload_shares",
		SubscribeUploadShares,
	},

	Route{
		"UnsubscribeDownloadShare",
		strings.ToUpper("Delete"),
		"/api/v4/user/subscriptions/download_shares/{share_id}",
		UnsubscribeDownloadShare,
	},

	Route{
		"UnsubscribeNode",
		strings.ToUpper("Delete"),
		"/api/v4/user/subscriptions/nodes/{node_id}",
		UnsubscribeNode,
	},

	Route{
		"UnsubscribeUploadShare",
		strings.ToUpper("Delete"),
		"/api/v4/user/subscriptions/upload_shares/{share_id}",
		UnsubscribeUploadShare,
	},

	Route{
		"UpdateNodeSubscriptions",
		strings.ToUpper("Put"),
		"/api/v4/user/subscriptions/nodes",
		UpdateNodeSubscriptions,
	},

	Route{
		"UpdateNotificationConfig",
		strings.ToUpper("Put"),
		"/api/v4/user/notifications/config/{id}",
		UpdateNotificationConfig,
	},

	Route{
		"UpdateProfileAttributes",
		strings.ToUpper("Put"),
		"/api/v4/user/profileAttributes",
		UpdateProfileAttributes,
	},

	Route{
		"UpdateUserAccount",
		strings.ToUpper("Put"),
		"/api/v4/user/account",
		UpdateUserAccount,
	},

	Route{
		"UploadAvatarAsMultipart",
		strings.ToUpper("Post"),
		"/api/v4/user/account/avatar",
		UploadAvatarAsMultipart,
	},

	Route{
		"CreateUser",
		strings.ToUpper("Post"),
		"/api/v4/users",
		CreateUser,
	},

	Route{
		"RemoveUser",
		strings.ToUpper("Delete"),
		"/api/v4/users/{user_id}",
		RemoveUser,
	},

	Route{
		"RemoveUserAttribute",
		strings.ToUpper("Delete"),
		"/api/v4/users/{user_id}/userAttributes/{key}",
		RemoveUserAttribute,
	},

	Route{
		"RequestLastAdminRoomsUsers",
		strings.ToUpper("Get"),
		"/api/v4/users/{user_id}/last_admin_rooms",
		RequestLastAdminRoomsUsers,
	},

	Route{
		"RequestUser",
		strings.ToUpper("Get"),
		"/api/v4/users/{user_id}",
		RequestUser,
	},

	Route{
		"RequestUserAttributes",
		strings.ToUpper("Get"),
		"/api/v4/users/{user_id}/userAttributes",
		RequestUserAttributes,
	},

	Route{
		"RequestUserGroups",
		strings.ToUpper("Get"),
		"/api/v4/users/{user_id}/groups",
		RequestUserGroups,
	},

	Route{
		"RequestUserRoles",
		strings.ToUpper("Get"),
		"/api/v4/users/{user_id}/roles",
		RequestUserRoles,
	},

	Route{
		"RequestUsers",
		strings.ToUpper("Get"),
		"/api/v4/users",
		RequestUsers,
	},

	Route{
		"RequestUsersRooms",
		strings.ToUpper("Get"),
		"/api/v4/users/{user_id}/rooms",
		RequestUsersRooms,
	},

	Route{
		"SetUserAttributes",
		strings.ToUpper("Post"),
		"/api/v4/users/{user_id}/userAttributes",
		SetUserAttributes,
	},

	Route{
		"UpdateUser",
		strings.ToUpper("Put"),
		"/api/v4/users/{user_id}",
		UpdateUser,
	},

	Route{
		"UpdateUserAttributes",
		strings.ToUpper("Put"),
		"/api/v4/users/{user_id}/userAttributes",
		UpdateUserAttributes,
	},
}
